{"version":3,"sources":["logo.svg","schedule.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","database","ref","set","time","lesson","place","remove","then","console","log","once","snapshot","username","val","useStyles","makeStyles","theme","root","width","marginTop","spacing","overflowX","table","minWidth","tableRow","createData","name","calories","fat","day","protein","rows","SimpleTable","classes","useState","Monday","0","1","2","3","4","Tuesday","Wednesday","Thursday","Friday","Saturday","lessons","setLessons","handleChange","event","target","value","Paper","className","Table","TableHead","TableBody","map","row","i","TableRow","TableCell","align","key","component","scope","type","onChange","size","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.304ee267.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport firebase from 'firebase';\n\nvar firebaseConfig = {\n    apiKey: \"AIzaSyDABebXH-LXPJWK0-3iE5qIfPp83qdGPkM\",\n    authDomain: \"schedule-312.firebaseapp.com\",\n    databaseURL: \"https://schedule-312.firebaseio.com\",\n    projectId: \"schedule-312\",\n    storageBucket: \"\",\n    messagingSenderId: \"1010797027720\",\n    appId: \"1:1010797027720:web:b1139db17cb9f6553a1a3d\"\n  };\n\nfirebase.initializeApp(firebaseConfig);\n\nvar database = firebase.database();\n\ndatabase.ref('monday/' + 0).set({\n    time: '08:45 - 10:20',\n    lesson: '',\n    place: ''\n});\n\ndatabase.ref('monday/' + 1).set({\n      time: '10:30 - 12:05',\n      lesson: 'Урматы лекция',\n      place: 'П14'\n});\n\ndatabase.ref('users/0').remove()\n  .then( () => console.log('successed') );\n\n  firebase.database().ref('/monday/' + 0).once('value').then(function(snapshot) {\n    var username = (snapshot.val() && snapshot.val().lesson) || 'Anonymous';\n    // ...\n    console.log('readed data & snapshot : ', username, snapshot.val() );\n  });\n\nconsole.log(' firebase : ', firebase, database);\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '80%',\n    marginTop: theme.spacing(3),\n    overflowX: 'auto',\n    ['@media (min-width: 240px)']: {\n      width: '90%',\n    },\n  },\n  table: {\n    minWidth: 650,\n    ['@media (min-width: 240px)']: {\n      minWidth: 50\n    },\n  },\n  tableRow: {\n    width: 30,\n  },\n}));\n\nfunction createData(name, calories, fat, day, protein) {\n  return { name, calories, fat, day, protein };\n}\n\nconst rows = [\n  createData('08:45 - 10:20', 237, '', 'Monday', ''),\n  createData('10:30 - 12:05', 'Урматы', 'П14', 'Monday','Денисов А. М.'),\n  createData('12:50 - 14:25', 262, '505', 'Monday', 'Данилов Б.Р.'),\n  createData('14:35 - 16:10', 305, 'П14', 'Monday', 'Ложкин С. А.'),\n  createData('16:20 - 17:55', 356, '678', 'Monday', 'Головина С.Г.'),\n  createData('08:45 - 10:20', 356, 16.0, 'Tuesday', 3.9),\n  createData('10:30 - 12:05', 356, 16.0, 'Tuesday', 3.9),\n  createData('12:50 - 14:25', 356, 16.0, 'Tuesday', 3.9),\n  createData('14:35 - 16:10', 356, 16.0, 'Tuesday', 3.9),\n  createData('16:20 - 17:55', 356, 16.0, 'Tuesday', 3.9),\n  createData('08:45 - 10:20', 356, 16.0, 'Wednesday', 3.9),\n  createData('10:30 - 12:05', 356, 16.0, 'Wednesday', 3.9),\n  createData('12:50 - 14:25', 356, 16.0, 'Wednesday', 3.9),\n  createData('14:35 - 16:10', 356, 16.0, 'Wednesday', 3.9),\n  createData('16:20 - 17:55', 356, 16.0, 'Wednesday', 3.9),\n  createData('08:45 - 10:20', 356, 16.0, 'Thursday', 3.9),\n  createData('10:30 - 12:05', 356, 16.0, 'Thursday', 3.9),\n  createData('12:50 - 14:25', 356, 16.0, 'Thursday', 3.9),\n  createData('14:35 - 16:10', 356, 16.0, 'Thursday', 3.9),\n  createData('16:20 - 17:55', 356, 16.0, 'Thursday', 3.9),\n  createData('08:45 - 10:20', 356, 16.0, 'Friday', 3.9),\n  createData('10:30 - 12:05', 356, 16.0, 'Friday', 3.9),\n  createData('12:50 - 14:25', 356, 16.0, 'Friday', 3.9),\n  createData('14:35 - 16:10', 356, 16.0, 'Friday', 3.9),\n  createData('16:20 - 17:55', 356, 16.0, 'Friday', 3.9),\n  createData('08:45 - 10:20', 356, 16.0, 'Saturday', 3.9),\n  createData('10:30 - 12:05', 356, 16.0, 'Saturday', 3.9),\n  createData('12:50 - 14:25', 356, 16.0, 'Saturday', 3.9),\n  createData('14:35 - 16:10', 356, 16.0, 'Saturday', 3.9),\n  createData('16:20 - 17:55', 356, 16.0, 'Saturday', 3.9),\n];\n\nexport default function SimpleTable() {\n  const classes = useStyles();\n\n  const [lessons, setLessons] = useState(\n    {\n    \tMonday : { 0 : '', 1 : 'Урматы лекция', 2 : 'ОКИ сем', 3: 'ОКИ лекция', 4 : 'Урматы сем' },\n      Tuesday : { 0 : '', 1 : 'ОУ лекция', 2 : 'Вер модели лекция', 3: 'Функан лекция', 4 : '' },\n      Wednesday : { 0 : '', 1 : 'Стат Физ лекция', 2 : 'ОКИ лекция', 3: 'МФК', 4 : '' },\n      Thursday : { 0 : 'МО лекция', 1 : '', 2 : 'Стат физ сем', 3: 'Экономика лекция', 4 : '' },\n      Friday : { 0 : 'ВП', 1 : 'ВП', 2 : 'ВП', 3: 'ВП', 4 : 'ВП' },\n      Saturday : { 0 : 'Прак', 1 : 'Экономика сем', 2 : 'Актуарка сем с 21/9', 3: '', 4 : '' },\n    }\n  );\n\n  function handleChange(event) {\n    setLessons(event.target.value);\n    console.log('input event log : ', event.target.name);\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <Table className={classes.table}>\n        <TableHead>\n        </TableHead>\n        <TableBody>\n          {rows.map( (row, i) => (\n            <>\n              { i%5 === 0 &&\n                <TableRow>\n                  <TableCell></TableCell>\n                  <TableCell align=\"center\">{row.day}</TableCell>\n                  <TableCell align=\"left\"></TableCell>\n                  <TableCell align=\"left\"></TableCell>\n                  <TableCell align=\"left\"></TableCell>\n                </TableRow>\n              }\n              { console.log('row : ', row, i % 5, i, lessons[row.day]) }\n              <TableRow key={row.name} className={classes.tableRow}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.name}\n                </TableCell>\n                <TableCell align=\"left\">\n                  <input type=\"text\" value={lessons[row.day][i % 5]} onChange={handleChange} size=\"40\" name={row.name} />\n                </TableCell>\n                <TableCell align=\"left\">{row.fat}</TableCell>\n                <TableCell align=\"left\">{row.protein}</TableCell>\n                <TableCell align=\"left\"></TableCell>\n              </TableRow>\n            </>\n          ))}\n        </TableBody>\n      </Table>\n    </Paper>\n  );\n}\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Schedule from './schedule';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <p>\n          312\n        </p>\n        <Schedule />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}